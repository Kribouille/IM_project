/*
 * generated by Xtext 2.10.0
 */
package org.xtext.twitter.twt.validation

import javax.inject.Inject
import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.util.CancelIndicator
import org.eclipse.xtext.validation.Check
import org.eclipse.xtext.validation.CheckMode
import org.eclipse.xtext.validation.IResourceValidator
import twitterRESTAPI.Date
import twitterRESTAPI.ExprSimple
import twitterRESTAPI.TwitterRESTAPIPackage
import org.eclipse.emf.ecore.EStructuralFeature
import java.util.regex.Pattern
import java.util.regex.Matcher

/**
 * This class contains custom validation rules.
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class TwitterRESTAPIValidator extends AbstractTwitterRESTAPIValidator {
	
	// Class constants
	private final static String CLASS_USER = "twitterRESTAPI.impl.UserImpl";
	private final static String CLASS_HASHTAG = "twitterRESTAPI.impl.HashtagImpl";
	private final static String CLASS_DATE = "twitterRESTAPI.impl.DateImpl";
	private final static String CLASS_EQUALS = "twitterRESTAPI.impl.EqualsImpl";
	
	// Date pattern
	private final static String PATTERN_DATE = "((0[1-9])|((1|2)[0-9])|(3[0-1]))/((0[1-9])|(1[0-2]))/(19[0-9]{2}|20[0-9]{2})";
	var p = Pattern.compile(PATTERN_DATE);

	@Inject IResourceValidator resourceValidator
	def checkResource(Resource r) {
		val issues = resourceValidator.validate(r,
            CheckMode.ALL, CancelIndicator.NullImpl)
    for (issue: issues) {
        switch issue.severity {
            case ERROR:
                println("ERROR: " + issue.message)
            case WARNING:
                println("WARNING: " + issue.message)
			case IGNORE: {
				println("IGNORING: " + issue.message)
			}
			case INFO: {
				println("INFO: " + issue.message)
			}
        }
    }
	}

	@Check
	def checkWellFormedDateAndOperationWithUserOrHashtag(ExprSimple e) {
		if (e.type.class.name.equals(CLASS_USER) || e.type.class.name.equals(CLASS_HASHTAG)) {
			if (!e.operation.class.name.equals(CLASS_EQUALS)) {
				error("Hashtag (#) and User (@) types can only be used with Equals (=) operation", e, TwitterRESTAPIPackage.Literals.EXPR_SIMPLE__OPERATION);
			}
		} else if (e.type.class.name.equals(CLASS_DATE)) {
 			var m = p.matcher(e.value);
 			if (!m.matches()) {
 				error("Incorrect date value. Required pattern = dd/MM/yyyy", e, TwitterRESTAPIPackage.Literals.EXPR_SIMPLE__VALUE);
 			}
			
		}
	}

}
