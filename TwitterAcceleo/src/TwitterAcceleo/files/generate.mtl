[comment encoding = UTF-8 /]
[module generate('http://www.example.org/twitterRESTAPI')]

[query public convertDate(d: Date) : String = invoke(
	'org.eclipse.acceleo.module.sample.DateFormatter',
	'formatDate(java.util.Date)',
	Sequence{d.value})
/]

[template public generateElement(aWebPage : WebPage)]
[comment @main /]
[file ('twitter.json', false, 'UTF-8')]
{
	"decks" : [ '[' /]
[for (d: Deck | aWebPage.deck)]
[generateDeck(d)/][/for]
	[ ']' /]
}
[/file]	
[/template]

[template public generateDeck(d : Deck)]
		{ "name" : "[d.name/]", "filter" : "[for (i: Instruction | d.instruction)]
 ( [generateInstruction(i)/] )[/for]" }[if d.followingSiblings()->size()>0]
,[/if]
[/template]

[template public generateInstruction(i: Instruction)]
[if (i.isNot)]
-[/if]
([if i.eClass().name = 'User']
from:[i.current(User).value/][/if]
[if i.eClass().name = 'Hashtag']
#[i.current(Hashtag).value/][/if]
[if (i.eClass().name = 'Date')][if (i.op.eClass().name = 'LessThan')]
until:[convertDate(i.current(Date))/][elseif (i.op.eClass().name = 'UpperThan')]
since:[convertDate(i.current(Date))/][else]
until:[convertDate(i.current(Date))/] since:[convertDate(i.current(Date))/][/if][/if]
[if i.eClass().name = 'Retweet']
filter:retweets[/if]
)[for (j: Instruction | i.next)]
[if ((j.followingSiblings()->size() > 0)._or(j.precedingSiblings()->size() > 0))]
 ([/if]
 [generateInstruction(j)/] [if (j.followingSiblings()->size() > 0)]
 OR[elseif (j.precedingSiblings()->size() > 0)]
 )[/if][/for]
[/template]